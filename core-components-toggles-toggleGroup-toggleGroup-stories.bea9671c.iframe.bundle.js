"use strict";(self.webpackChunk_aragon_ods=self.webpackChunk_aragon_ods||[]).push([[7535],{"./src/core/components/toggles/toggleGroup/toggleGroup.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Controlled:()=>Controlled,Default:()=>Default,MultiSelect:()=>MultiSelect,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_toggle__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/core/components/toggles/toggle/index.ts"),_toggleGroup__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/core/components/toggles/toggleGroup/toggleGroup.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");const meta={title:"Core/Components/Toggles/ToggleGroup",component:_toggleGroup__WEBPACK_IMPORTED_MODULE_2__.O,parameters:{design:{type:"figma",url:"https://www.figma.com/file/jfKRr1V9evJUp1uBeyP3Zz/v1.0.0?type=design&node-id=11857-23553&mode=dev"}}},Default={render:props=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_toggleGroup__WEBPACK_IMPORTED_MODULE_2__.O,{...props,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_toggle__WEBPACK_IMPORTED_MODULE_1__.l,{value:"multisig",label:"Multisig"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_toggle__WEBPACK_IMPORTED_MODULE_1__.l,{value:"token-based",label:"Token Based"})]})},Controlled={render:({value:omittedValue,defaultValue,onChange,isMultiSelect,...props})=>{const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_toggleGroup__WEBPACK_IMPORTED_MODULE_2__.O,{isMultiSelect:!1,value,onChange:setValue,...props,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_toggle__WEBPACK_IMPORTED_MODULE_1__.l,{value:"ethereum",label:"Ethereum"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_toggle__WEBPACK_IMPORTED_MODULE_1__.l,{value:"polygon",label:"Polygon"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_toggle__WEBPACK_IMPORTED_MODULE_1__.l,{value:"base",label:"Base"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_toggle__WEBPACK_IMPORTED_MODULE_1__.l,{value:"arbitrum",label:"Arbitrum"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_toggle__WEBPACK_IMPORTED_MODULE_1__.l,{value:"bsc",label:"Binance Smart Chain"})]})}},MultiSelectComponent=props=>{const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_toggleGroup__WEBPACK_IMPORTED_MODULE_2__.O,{isMultiSelect:!0,value,onChange:setValue,...props,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_toggle__WEBPACK_IMPORTED_MODULE_1__.l,{value:"all",label:"All DAOs"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_toggle__WEBPACK_IMPORTED_MODULE_1__.l,{value:"member",label:"Member"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_toggle__WEBPACK_IMPORTED_MODULE_1__.l,{value:"following",label:"Following",disabled:!0})]})},MultiSelect={render:({value,onChange,isMultiSelect,...props})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(MultiSelectComponent,{...props})},__WEBPACK_DEFAULT_EXPORT__=meta,__namedExportsOrder=["Default","Controlled","MultiSelect"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: props => <ToggleGroup {...props}>\n            <Toggle value="multisig" label="Multisig" />\n            <Toggle value="token-based" label="Token Based" />\n        </ToggleGroup>\n}',...Default.parameters?.docs?.source},description:{story:"Default usage example of the ToggleGroup component.",...Default.parameters?.docs?.description}}},Controlled.parameters={...Controlled.parameters,docs:{...Controlled.parameters?.docs,source:{originalSource:'{\n  render: ({\n    value: omittedValue,\n    defaultValue,\n    onChange,\n    isMultiSelect,\n    ...props\n  }) => {\n    const [value, setValue] = useState<string>();\n    return <ToggleGroup isMultiSelect={false} value={value} onChange={setValue} {...props}>\n                <Toggle value="ethereum" label="Ethereum" />\n                <Toggle value="polygon" label="Polygon" />\n                <Toggle value="base" label="Base" />\n                <Toggle value="arbitrum" label="Arbitrum" />\n                <Toggle value="bsc" label="Binance Smart Chain" />\n            </ToggleGroup>;\n  }\n}',...Controlled.parameters?.docs?.source},description:{story:"Controlled usage example of the ToggleGroup component.",...Controlled.parameters?.docs?.description}}},MultiSelect.parameters={...MultiSelect.parameters,docs:{...MultiSelect.parameters?.docs,source:{originalSource:"{\n  render: ({\n    value,\n    onChange,\n    isMultiSelect,\n    ...props\n  }) => <MultiSelectComponent {...props} />\n}",...MultiSelect.parameters?.docs?.source},description:{story:"ToggleGroup component used with multiple selection.",...MultiSelect.parameters?.docs?.description}}};try{Default.displayName="Default",Default.__docgenInfo={description:"Default usage example of the ToggleGroup component.",displayName:"Default",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/core/components/toggles/toggleGroup/toggleGroup.stories.tsx#Default"]={docgenInfo:Default.__docgenInfo,name:"Default",path:"src/core/components/toggles/toggleGroup/toggleGroup.stories.tsx#Default"})}catch(__react_docgen_typescript_loader_error){}try{Controlled.displayName="Controlled",Controlled.__docgenInfo={description:"Controlled usage example of the ToggleGroup component.",displayName:"Controlled",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/core/components/toggles/toggleGroup/toggleGroup.stories.tsx#Controlled"]={docgenInfo:Controlled.__docgenInfo,name:"Controlled",path:"src/core/components/toggles/toggleGroup/toggleGroup.stories.tsx#Controlled"})}catch(__react_docgen_typescript_loader_error){}try{MultiSelect.displayName="MultiSelect",MultiSelect.__docgenInfo={description:"ToggleGroup component used with multiple selection.",displayName:"MultiSelect",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/core/components/toggles/toggleGroup/toggleGroup.stories.tsx#MultiSelect"]={docgenInfo:MultiSelect.__docgenInfo,name:"MultiSelect",path:"src/core/components/toggles/toggleGroup/toggleGroup.stories.tsx#MultiSelect"})}catch(__react_docgen_typescript_loader_error){}}}]);